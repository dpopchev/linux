#!/usr/bin/env bash

# some of the complicated stuff are adopted from Gentoo bashrc, available online
# https://gitweb.gentoo.org/repo/gentoo.git/tree/app-shells/bash/files/bashrc
# https://gist.github.com/mvidaldp/8051523f75669a627553f1a3c943d655 (mirror)

# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
    # Shell is non-interactive.  Be done now!
    return
fi

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

# Disable completion when the input buffer is empty.  i.e. Hitting tab
# and waiting a long time for bash to expand all of $PATH.
shopt -s no_empty_cmd_completion

# Enable history appending instead of overwriting when exiting.  #139609
shopt -s histappend

# Save each command to the history file as it's executed.  #517342
# This does mean sessions get interleaved when reading later on, but this
# way the history is always up to date.  History is not synced across live
# sessions though; that is what `history -n` does.
# Disabled by default due to concerns related to system recovery when $HOME
# is under duress, or lives somewhere flaky (like NFS).  Constantly syncing
# the history will halt the shell prompt until it's finished.
# PROMPT_COMMAND='history -a'

# not part of Gentoo bashrc, but logically should be here
# it makes history to ignore both commands starting with a space and duplicates
HISTCONTROL='ignoreboth'

# Change the window title of X terminals
case ${TERM} in
    [aEkx]term*|rxvt*|gnome*|konsole*|interix|tmux*)
        PS1='\[\033]0;\u@\h:\w\007\]'
        ;;
    screen*)
        PS1='\[\033k\u@\h:\w\033\\\]'
        ;;
    *)
        unset PS1
        ;;
esac

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.
# We run dircolors directly due to its changes in file syntax and
# terminal name patching.
use_color=false
if type -P dircolors >/dev/null ; then
    # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
    LS_COLORS=
    if [[ -f ~/.dir_colors ]] ; then
        eval "$(dircolors -b ~/.dir_colors)"
    elif [[ -f /etc/DIR_COLORS ]] ; then
        eval "$(dircolors -b /etc/DIR_COLORS)"
    else
        eval "$(dircolors -b)"
    fi
    # Note: We always evaluate the LS_COLORS setting even when it's the
    # default.  If it isn't set, then `ls` will only colorize by default
    # based on file attributes and ignore extensions (even the compiled
    # in defaults of dircolors). #583814
    if [[ -n ${LS_COLORS:+set} ]] ; then
        use_color=true
    else
        # Delete it if it's empty as it's useless in that case.
        unset LS_COLORS
    fi
else
    # Some systems (e.g. BSD & embedded) don't typically come with
    # dircolors so we need to hardcode some terminals in here.
    case ${TERM} in
        [aEkx]term*|rxvt*|gnome*|konsole*|screen|tmux|cons25|*color) use_color=true;;
    esac
fi

while read -d $'\0' file; do
    source "$file"
done < <(find $HOME/.config/bashrc.d/ -maxdepth 1 -type f -print0)

# needs field_prepend from user home bashrc.d/utils.sh
prepend_field CDPATH ${HOME}
prepend_field CDPATH ${HOME}/projects

# show the closes directory parent in the PS1
PROMPT_DIRTRIM=2

# enclose the colors inside \[ \] or terminal will overlap long lines
# https://askubuntu.com/a/111849
if ${use_color} ; then
    if [[ ${EUID} == 0 ]] ; then
        # user is root
        PS1+='\[\033[01;31m\]\h\[\033[01;34m\] \w \$\[\033[00m\] '
    else
        # user is NOT root
        # PS1+='$(ps1_status)$(ps1_user_hostname) $(ps1_cwd) $(ps1_git_branch) '
        [[ -n $TMUX ]] && hostname='tmux'
        PS1+='$(ps1_status)\001\033[01;32m\002\u@${hostname:-\h}\001\033[00m\002 \001\033[01;34m\002\W\001\033[00m\002 $(ps1_git_branch) '
    fi
else
    # show root@ when we don't have colors
    PS1+='\u@\h \w \$ '
fi

unset use_color sh

# nice bash features
shopt -s autocd
shopt -s cdspell
shopt -s checkjobs
shopt -s dirspell

# TODO maybe this can be done in inputrc?
# disable Ctrl+S/Q
stty stop ''
stty start ''
stty -ixon
stty -ixoff

prepend_field PATH ~/.local/bin
